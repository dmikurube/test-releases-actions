name: Publish
on:
  push:
    tags:
      - "foo.*"
jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Get the tag
      id: get-tag
      run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - name: Print the tag
      run: echo ${{ steps.get-tag.outputs.tag }}
    - name: Create a GitHub Release
      uses: "actions/github-script@v6"
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |
          try {
            const response = await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: false,
              name: 'Release ${{ steps.get-tag.outputs.tag }}',
              owner: context.repo.owner,
              prerelease: false,
              repo: context.repo.repo,
              tag_name: '${{ steps.get-tag.outputs.tag }}',
            });

            core.exportVariable('RELEASE_ID', response.data.id);
            core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
          } catch (error) {
            core.setFailed(error.message);
          }
    - name: Print the RELEASE_ID
      run: echo "${{ env.RELEASE_ID }}"
    - name: Print the RELEASE_UPLOAD_URL
      run: echo "${{ env.RELEASE_UPLOAD_URL }}"
    - name: Upload an Asset in GitHub Release
      uses: "actions/github-script@v6"
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |
          console.log("foo");
          console.log('environment', process.versions);
          console.log({ context.repo.owner, context.repo.repo, context.sha });
    #     const fs = require('fs').promises;
    #     await github.rest.repos.uploadReleaseAsset({
    #       owner: context.repo.owner,
    #       repo: context.repo.repo,
    #       release_id: ${{ env.RELEASE_ID }},
    #       name: 'README.md',
    #       data: await fs.readFile('./README.md')
    #     });
    #- name: Upload artifacts
    #  uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
    #  with:
    #    github-token: ${{secrets.GITHUB_TOKEN}}
    #    script: |
    #      console.log('environment', process.versions);
    #
    #      const fs = require('fs').promises;
    #
    #      const { repo: { owner, repo }, sha } = context;
    #      console.log({ owner, repo, sha });
    #
    #      await github.rest.repos.uploadReleaseAsset({
    #        owner, repo,
    #        release_id: ${{ github.event.inputs.release }},
    #        name: 'oh-my-posh.json',
    #        data: await fs.readFile('./packages/scoop/dist/oh-my-posh.json')
    #      });
    #- name: Upload an asset to the GitHub Release
    #  run: |
    #    curl -X POST \
    #    -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
    #    -H "Content-Type: application/octet-stream" \
    #    https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get-tag.outputs.tag }}/assets?name=README.md \
    #    --data-binary "@README.md"
